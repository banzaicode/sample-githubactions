on: push
name: deploy
jobs:
  build-and-push:
    name: build and push image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: build and push to docker
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ github.repository }}
        tag_with_ref: true
        tag_with_sha: true
        tags: ${{ github.sha }}
  deploy-to-cluster:
    name: deploy to cluster
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: deploy to cluster
      uses: steebchen/kubectl@v2.0.0
      with: # defaults to latest kubectl binary version
        config: ${{ secrets.KUBE_CONFIG_DATA }}
        command: set image --record deployment/sample-gha sample-gha=${{ github.repository }}:${{ github.sha }}
    - name: verify deployment
      uses: steebchen/kubectl@v2.0.0
      with:
        config: ${{ secrets.KUBE_CONFIG_DATA }}
        version: v1.21.0 # specify kubectl binary version explicitly
        command: rollout status deployment/sample-gha
  # proxy inverso
  #ngrok-watcher:
  #  name: Ngrok watcher
  #  runs-on: ubuntu-latest
  #  needs: deploy-to-cluster
  #  steps:
  #  - name: Get ngrok URL
  #    id: getNgrokUrl
  #    uses: debianmaster/kubectl@master
  #    env:
  #      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  #      KUBECTL_VERSION: "1.20"
  #    with:
  #      args: |
  #        URL=`kubectl -n sample-gha get ngrok -o=custom-columns='DATA:status.url' | tail -n1` 
  #        echo "::set-output name=url::$URL"